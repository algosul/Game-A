name: release
on: [ push, pull_request ]
jobs:
  build:
    strategy:
      matrix:
        platform: [ ubuntu-latest, macos-latest, windows-latest ]
        include:
          - platform: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: x86_64-linux.tar.gz
          - platform: macos-latest
            target: x86_64-apple-darwin
            suffix: x86_64-macos.tar.gz
          - platform: windows-latest
            target: x86_64-pc-windows-msvc
            suffix: x86_64-windows.7z
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{ matrix.target }}
          profile: complete
          override: true
          components: rustfmt, clippy

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}[1](@ref)

      - name: Cache APT packages
        if: matrix.platform == 'ubuntu-latest'
        id: cache-apt
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles('**/dependencies.hash') }}
          restore-keys: |
            ${{ runner.os }}-apt
      - name: Generate dependencies hash
        if: matrix.platform == 'ubuntu-latest' && steps.cache-apt.outputs.cache-hit != 'true'
        run: |
          echo "libasound2-dev alsa-utils" > dependencies.list
          sha256sum dependencies.list > dependencies.hash

      - name: Install ALSA libraries
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libasound2-dev alsa-utils

      - name: Run fmt check
        run: cargo fmt -- --check

      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy

      - uses: actions-rs/cargo@v1
        with:
          command: test

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}
          path: |
            target/release/*
          if-no-files-found: error
          retention-days: 7
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: softprops/action-gh-release@v1
        with:
          files: target/release/*
